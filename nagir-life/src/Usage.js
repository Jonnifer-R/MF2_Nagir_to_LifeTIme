import React, {Component} from 'react';

class Usage extends Component {
  render() {
    return (
      <div>
        <hr width="70%"/>
        <h2>- 概要 -</h2>
        <div className="usage-inline">
          <h5>1.目的</h5>
          <ul>ピーク告知と引退勧告1までに与えたナギールの数から<br />
          モンスターの成長タイプと寿命を求める
          </ul>
        </div>

        <div className="usage-inline">
          <h5>2.定義</h5>
          <ul>
            <li>ナギール＋休養(寿命-21週) ＝ 1ナギール</li>
            <li>1ナギール後の週明けに告知 ＝ ナギール数1と入力</li>
            <li>ピーク告知 ＝ 「これからが大事な時期」</li>
            <li>引退勧告1 ＝ 残り寿命50週未満 ＝ 「調子が悪いみたい…」</li>
          </ul>
        </div>

        <div className="usage-inline">
          <h5>3.手順</h5>
          <ol>
            <li>ピーク告知を受けるまで、ナギール＋休養を繰り返す。</li>
            <li>ピーク告知を受けたらナギール数を入力する。</li>
            <li>トレーニングで成長適正を判定する。(ピーク)</li>
              <ul>
                <li>結果だけを見てリロードするのが望ましい。</li>
              </ul>
            <li>早熟と持続の判定</li>
              ピーク告知 + 1ナギール
              <ul>
                <li>ピーク → 持続 or 早熟(481～490, 541～560, 601～700)</li>
              </ul>
              ピーク告知 + 2ナギール
              <ul>
                <li>ピーク → 持続</li>
                <li></li>
              </ul>
            
          </ol>
        </div>

        <div className="usage-inline">
          <h5>4.特殊パターン</h5>
          <ul>
            <li>早熟においては作業行程の都合でピークとその告知が飛ぶ場合がある。</li>
            <li>ナギール数(4, 5, 6)のとき早熟の寿命(211-240, 281-300, 351-360)で
              ピーク期間を飛ばしてしまいピーク告知を受けることが出来ない。<br />
              対応としてはモンスターの大きさや成長値からピークを過ぎていることを別途確認する必要がある。<br />
              入力フォームには「無し 4」「無し 5」「無し 6」として用意した。
              <p />
              また、ピーク告知なしが発生する全てのパターンにおいて準ピーク期間に着地している。<br />
              そのため成長適正は準ピークとして測定すればよい。

              <p />
              参考：<br />
              <a href="https://ameblo.jp/solmf2/entry-12538461030.html">
                モンスターファーム2 育成・調査記録 - 【画像】成長段階による体格の大きさ ピーク判別
              </a>
            </li>  
          </ul>
        </div>
      </div>
  )}
}

export default Usage;